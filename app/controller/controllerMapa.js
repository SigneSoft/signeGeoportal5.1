/*
 * File: app/controller/controllerMapa.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('signeGeoportal.controller.controllerMapa', {
    extend: 'Ext.app.Controller',

    views: [
        'LegendPanel',
        'VistaPrevia'
    ],

    control: {
        "#btnEnfocar": {
            click: 'onBtnEnfocarClick'
        },
        "#btnEliminarCapa": {
            click: 'onBtnEliminarCapaClick'
        },
        "#btnImprimir": {
            click: 'onBtnImprimirClick'
        },
        "#btnAniadirCapa": {
            click: 'onBtnAniadirCapaClick'
        },
        "#btnAyuda": {
            click: 'onBtnAyudaClick'
        }
    },

    onBtnEnfocarClick: function(button, e, eOpts) {
        signeGeoportal.xMap.map.zoomToScale(2000000,false);

        //signePortal.xMap.zoomToExtent(new OpenLayers.Bounds(minLng,minLat,maxLng,maxLat));
    },

    onBtnEliminarCapaClick: function(button, e, eOpts) {
        var layer = signeGeoportal.getApplication().obtenerLayer();

        if (layer){
            Ext.MessageBox.show({
                title : 'Eliminar Capa',
                buttons : Ext.MessageBox.YESNO,
                msg : 'Realmente desea eliminar la capa ' + record.data.layer.name +  ' del mapa ?',
                icon : Ext.Msg.WARNING,
                fn : function(btn)
                {
                    if (btn == 'yes')
                    {
                        signeGeoportal.xMap.map.removeLayer(layer);
                    }

                }
            });
        }



    },

    onBtnImprimirClick: function(button, e, eOpts) {
        var printExtent = Ext.create('GeoExt.plugins.PrintExtent', {
            printProvider: printProvider
        });

        printDialog = Ext.create('Ext.Window', {
            height: 580,
            width: 450,
            layout: 'border',
            title: 'Vista previa de impresión.',
            modal: true,
            items: [
                {
                    xtype: 'panel',
                    region: 'north',
                    layout: 'fit',
                    title: '',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    id: 'btnImprimirMapa',
                                    text: 'Imprimir PDF',
                                    iconCls: 'print-pdf',
                                    handler: function(){
                                        var legendlayer = Ext.getCmp('legendlayer');
                                        var printMapPanel = Ext.getCmp('printmappanel');

                                        var includeLegend;
                                        includeLegend = true;

                                        var scale = printProvider.scales.getAt(1);
                                        printPage.setScale(scale, "m");


                                        printProvider.customParams.mapTitle = Ext.getCmp('txtTitulo').getValue();
                                        printProvider.customParams.comment = Ext.getCmp('txtComentario').getValue();

                                        var opt = {"mode":"screen"};
                                        printPage.fit(printMapPanel, opt);

                                        printProvider.setDpi(printProvider.dpis.getAt(1));
                                        printProvider.print(printMapPanel, printPage, includeLegend && {legend: legendlayer});
                                    }

                                }
                            ]
                        }
                    ],
                    items: [
                        {
                            xtype: 'fieldset',
                            height: 120,
                            title: 'Información del mapa',
                            items: [
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    id: 'txtTitulo',
                                    fieldLabel: 'Titulo',
                                    name: 'tituloMapa',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textareafield',
                                    anchor: '100%',
                                    id: 'txtComentario',
                                    fieldLabel: 'Comentario',
                                    name: 'comentarioMapa',
                                    allowBlank: false
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    items: {
                        xtype: "gx_printmappanel",
                        id: 'printmappanel',
                        sourceMap: signeGeoportal.xMap,
                        printProvider: printProvider,
                        //center: new OpenLayers.LonLat(-10048800, 1735400),
                        //limitScales:true,
                        //plugins: [printExtent],
                    },
                    region: 'center',
                    layout: 'fit',
                }]
        });


        printDialog.show();

        //printExtent.addPage();

    },

    onBtnAniadirCapaClick: function(button, e, eOpts) {
        var pgParametro = Ext.getCmp('pgParametro');
        data = pgParametro.getSource();
        store = pgParametro.getStore();
        var strParametros = "";
        var strTexto = "";
        var strVariable = "&env=";

        var error = false;

        // Validación para el parmámetro color
        if(!store.data.items[0].data.value){
            error = true;

        }else{
            //                                    var codigo_color =['a','b','c','d','e','f','9','8','7','6','5','4','3','2','1','0'];
            //                                    var codigo_color =['a','b','c','d','e','f','0','1','2','3','4','5','6','7','8','9'];
            var value = store.data.items[0].data.value;

            var codigo_color =['0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'];

            //value = '123456';

            var codigo = value.substring(2, 3);

            var par1 = value.substring(0,2);

            var par3 = value.substring(4,6);

            var posicion = codigo_color.indexOf(codigo);

            var intervalo = parseInt(16 / 3) ;

            //var intervalo_redondeado = parseFloat(intervalo).toFixed(0);
            //        cadenavariables="&env=r1:"+r1+";r2:"+r2+";r3:"+r3+";r4:"+r4+";r5:"+limite+";c1:33a02c;c2:b2df8a;c4:ff7f00;c5:e31a1c";
            //&env=color:00FF00;name:triangle;size:12
            var strVariable = strVariable + "color0:"+value;

            for(var n=1;n<3;n++)
            {
                posicion = parseInt(posicion) + intervalo;
                if (posicion > 16){
                    posicion = 0;

                }
                strVariable = strVariable + ";color" + n + ":" + par1 + codigo_color[posicion] + codigo_color[posicion] + par3;


            }

            console.log(strVariable);

        }


        //Validación para el resto de parámetros
        for(var i=1;i<store.data.items.length;i++)
        {

            if (i > 0 ){

                // A la variable i se le debe restar la cantidad de variables de substitución de estilo

                strParametros = strParametros + "p" + (i - 1) + ":" + store.data.items[i].data.value + ";";
                strTexto = strTexto + store.data.items[i].data.value + " ";

                if (!store.data.items[i].data.value){

                    error = true;
                    //        console.log(store.data.items[i]);
                }

            }
        }

        if (error === true){
            Ext.Msg.show({
                title: 'Mensaje del Sistema',
                msg: 'No es posible añadir la capa debido que existen parámetros que no se han definido.',
                buttons: Ext.Msg.OK,
                icon: Ext.MessageBox.INFO
            });
        }else{
            signeGeoportal.getApplication().aniadirCapa(signeGeoportal.xClone.title, signeGeoportal.xClone.url, signeGeoportal.xClone.name, signeGeoportal.xClone, strVariable, strParametros, strTexto);
        }


    },

    onBtnAyudaClick: function(button, e, eOpts) {
        url='manual_siceg_geoportal.pdf';

        var vp = Ext.widget('vistaprevia');
        vp.down('#vistaPrevia').update('<iframe src="./docs/' + url + '" width="100%" height="100%"></iframe>');
        vp.show();
    }

});
