{
    "type": "Ext.app.Application",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "controllers": [
            "controllerMapa",
            "controllerLogin"
        ],
        "models": [
            "modelParametro",
            "modelLogin"
        ],
        "name": "signeGeoportal",
        "stores": [
            "storeCatalogo",
            "storeParametro",
            "storeLogin"
        ],
        "views": [
            "Escritorio",
            "LegendPanel",
            "MapPanel",
            "Map",
            "ListaLayer",
            "InfoPanel",
            "ContentPanel",
            "VentanaParametro",
            "clsLogin",
            "VentanaAniadirCapa"
        ],
        "xClase": 0
    },
    "name": "Application",
    "configAlternates": {
        "xMap": "object",
        "xLegend": "object",
        "xLayerStore": "object",
        "xInfo": "object",
        "xSlider": "object",
        "xTip": "object",
        "xClone": "object",
        "xMeasure": "object",
        "xClases": "number",
        "xClase": "number"
    },
    "designerId": "application",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "xMap",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "xLegend",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "xLayerStore",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "xInfo",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "xSlider",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "xTip",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "xClone",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "xMeasure",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "xClase",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "launch",
                "implHandler": [
                    ""
                ]
            },
            "name": "launch",
            "designerId": "b043cf2f-eb12-433d-ad8d-a2143b8d4e82"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "titulo_capa, url_capa, nombre_capa, clone",
                    "variables",
                    "parametros",
                    "texto"
                ],
                "fn": "aniadirCapa",
                "implHandler": [
                    "if (!parametros){",
                    "    var wms = new OpenLayers.Layer.WMS(",
                    "        clone.title,",
                    "        clone.url,",
                    "        {layers:clone.name,",
                    "         transparent : 'true',",
                    "         format: 'image/png'",
                    "        },",
                    "        {opacity: 0.7,",
                    "         isBaseLayer: false,",
                    "         //displayInLayerSwitcher:false",
                    "         //     attribution: \"<img src='\"+url_capa+\"request=GetLegendGraphic&format=image/png&width=18&height=17&layer=\"+nombre_capa+\"&legend_options=fontName:Times%20New%20Roman;fontAntiAliasing:true;fontColor:0x000033;fontSize:12;bgColor:0xFFFFEE;dpi:180'>\"",
                    "        }",
                    "    );",
                    "",
                    "    signeGeoportal.xMap.map.addLayer(wms);",
                    "}else{",
                    "",
                    "",
                    "    var wms = new OpenLayers.Layer.WMS(",
                    "        clone.title + \" \" + texto,",
                    "        clone.url + variables,",
                    "        {layers:clone.name,",
                    "         transparent : 'true',",
                    "         format: 'image/png',",
                    "         viewparams: parametros,",
                    "        },",
                    "        {opacity: 0.7,",
                    "         isBaseLayer: false",
                    "         //displayInLayerSwitcher:false",
                    "         //     attribution: \"<img src='\"+url_capa+\"request=GetLegendGraphic&format=image/png&width=18&height=17&layer=\"+nombre_capa+\"&legend_options=fontName:Times%20New%20Roman;fontAntiAliasing:true;fontColor:0x000033;fontSize:12;bgColor:0xFFFFEE;dpi:180'>\"",
                    "        }",
                    "    );",
                    "",
                    "    signeGeoportal.xMap.map.addLayer(wms);",
                    "",
                    "    Ext.MessageBox.show({",
                    "        title: 'Mensaje del Sistema',",
                    "        msg: 'La capa se esta cargando al visor del mapa.',",
                    "        icon: Ext.MessageBox.INFO,",
                    "        buttons: Ext.Msg.OK",
                    "    });",
                    "}",
                    "",
                    ""
                ]
            },
            "name": "aniadirCapa",
            "designerId": "a1340267-0c8f-40c7-be26-da70db6ec608"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "obtenerLayer",
                "implHandler": [
                    "var arbolCapa = Ext.getCmp(\"treelayer\");",
                    "record = arbolCapa.getSelectionModel().getSelection()[0];",
                    "layer = signeGeoportal.xMap.map.getLayer(record.data.layer.id);",
                    "",
                    "return layer;",
                    "//alert(\"func cambiando opacidad\");",
                    "",
                    ""
                ]
            },
            "name": "obtenerLayer",
            "designerId": "88c0be0f-4510-4b7f-9798-4176aae4add5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "element"
                ],
                "fn": "toggleControl",
                "implHandler": [
                    "for (var key in signeGeoportal.xMeasure) {",
                    "    if(element.id === \"lineToggle\"){",
                    "        value = \"line\";",
                    "    }else if(element.id === \"polygonToggle\"){",
                    "        value = \"polygon\";        ",
                    "    }else{",
                    "        value = \"none\";",
                    "    }",
                    "",
                    "    if (value === key && element.pressed) {",
                    "        signeGeoportal.xMeasure[key].activate();",
                    "    } else {",
                    "        signeGeoportal.xMeasure[key].deactivate();",
                    "    }",
                    "}"
                ]
            },
            "name": "toggleControl",
            "designerId": "66a7cf74-5ca1-472e-8065-134caa8fedbf"
        },
        {
            "type": "Ext.Loader",
            "reference": {
                "name": "loader",
                "type": "object"
            },
            "codeClass": null,
            "userConfig": {
                "paths": [
                    " {GeoExt: '../geoext2210/src/GeoExt'}"
                ]
            },
            "name": "Loader3",
            "designerId": "a75ad2ad-8c6a-45a3-b04b-73de1f4beead"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "wms_url"
                ],
                "fn": "addWMSServer",
                "implHandler": [
                    "//Ext.getCmp('wms_grid_services').loadMask.show();",
                    "",
                    "/*var wms_store_layers_expander = new Ext.grid.RowExpander({",
                    "    id: 'expander',",
                    "    tpl : new Ext.Template(",
                    "        '<p><b>Resumen:</b><br/><div style=\"width:500px\">{Abstract}</div></p>'",
                    "    )",
                    "});*/",
                    "",
                    "function WMS_BaseName_LayerId(val,a,b,ss)",
                    "{",
                    "\tvar cellValue=Ext.getCmp('wms_grid_layers').getStore().getAt(ss);",
                    "",
                    "\tvar layer_baseName= cellValue.get('Name');",
                    "",
                    "\tvar layer_url= cellValue.get('URL');",
                    "",
                    "\tvar layer_id=layer_url+\"_\"+layer_baseName;",
                    "",
                    "\tvar img=\"\";",
                    "",
                    "\tif (findBaseNameLayerIfAlreadyInTree(layer_id))",
                    "\t{",
                    "\t\timg=\"<img src='images/check_16.png' width='14' height='14'\\\">\";",
                    "\t}",
                    "",
                    "\treturn img;",
                    "",
                    "}",
                    "",
                    "var wms_store_layers_columns=new Ext.grid.ColumnModel([",
                    "//    wms_store_layers_expander,",
                    "    {header: '',dataIndex:\"URL\",renderer:WMS_BaseName_LayerId,sortable: true,width:24,hidden:false},",
                    "    {header: 'Nombre', dataIndex: \"Name\", sortable: true,width:200},",
                    "    {header: 'Título', dataIndex: \"Title\", sortable: true,width:280},",
                    "    {header: 'Resumen', dataIndex: \"Abstract\",width:200,hidden:true},",
                    "    {header: '', dataIndex: \"crs\",width:200,hidden:true},",
                    "    {header: '', dataIndex: \"Minx\",width:200,hidden:true},",
                    "    {header: '', dataIndex: \"Miny\",width:200,hidden:true},",
                    "    {header: '', dataIndex: \"Maxx\",width:200,hidden:true},",
                    "    {header: '', dataIndex: \"Maxy\",width:200,hidden:true},",
                    "    {header: '', dataIndex: \"SRS\",width:100,hidden:true},",
                    "    {header: '', dataIndex: \"EPSG\",width:100,hidden:true},",
                    "    {header: '', dataIndex: \"queryable\",width:100,hidden:true}",
                    "",
                    "]);",
                    "",
                    "",
                    "Ext.Ajax.request({",
                    "    url:\"./app/data/wms_isvalid_url.php?url=\"+wms_url,",
                    "    timeout:5000,",
                    "    async:false,",
                    "    success:function(result, response)",
                    "    {",
                    "        var wms_result=result.responseText;",
                    "",
                    "        if (wms_result!==\"\")",
                    "        {",
                    "",
                    "            Ext.Ajax.request({",
                    "                url:\"./app/data/wms_get_version_epsg.php?url=\"+wms_url,",
                    "                timeout:5000,",
                    "                async:false,",
                    "                success:function(result,response)",
                    "                {",
                    "                    //console.log(result.responseText);",
                    "",
                    "                    var jsonData = Ext.util.JSON.decode(result.responseText);",
                    "",
                    "                    var version = jsonData['version'];",
                    "",
                    "                    var epsg = jsonData[\"epsg\"];",
                    "",
                    "                    var crs_wms = \"\";",
                    "",
                    "//                    crs_wms=get_selected_wms_service_epsg;",
                    "",
                    "                    var xml_columns=\"\";",
                    "",
                    "                    if (version == \"1.1.0\")",
                    "                    {",
                    "                        xml_columns=['Name','Title','Abstract',{name:'Minx',mapping:'LatLonBoundingBox/@minx'},{name:'Miny',mapping:'LatLonBoundingBox/@miny'},{name:'Maxx',mapping:'LatLonBoundingBox/@maxx'},{name:'Maxy',mapping:'LatLonBoundingBox/@maxy'},{name:\"SRS\",mapping:function(){return \"1.1.0\";}},{name:\"EPSG\",mapping:function(){return epsg;}},{name:'queryable',mapping:'@queryable'},{name:'URL',mapping:function(){return r.data.url;}},{name:'crs',mapping:function(){return crs_wms;}}];",
                    "                    }",
                    "                    if (version == \"1.1.1\")",
                    "                    {",
                    "                        xml_columns=['Name','Title','Abstract',{name:'Minx',mapping:'LatLonBoundingBox/@minx'},{name:'Miny',mapping:'LatLonBoundingBox/@miny'},{name:'Maxx',mapping:'LatLonBoundingBox/@maxx'},{name:'Maxy',mapping:'LatLonBoundingBox/@maxy'},{name:\"SRS\",mapping:function(){return \"1.1.1\";}},{name:\"EPSG\",mapping:function(){return epsg;}},{name:'queryable',mapping:'@queryable'},{name:'URL',mapping:function(){return r.data.url;}},{name:'crs',mapping:function(){return crs_wms;}}];",
                    "                    }",
                    "                    if (version == \"1.3.0\")",
                    "                    {",
                    "",
                    "                        xml_columns=['Name','Title','Abstract',{name:'Minx',mapping:'EX_GeographicBoundingBox/westBoundLongitude'},{name:'Miny',mapping:'EX_GeographicBoundingBox/eastBoundLongitude'},{name:'Maxx',mapping:'EX_GeographicBoundingBox/southBoundLatitude'},{name:'Maxy',mapping:'EX_GeographicBoundingBox/northBoundLatitude'},{name:\"SRS\",mapping:function(){return \"1.3.0\";}},{name:\"EPSG\",mapping:function(){return epsg;}},{name:'queryable',mapping:'@queryable'},{name:'URL',mapping:function(){return r.data.url;}},{name:'crs',mapping:function(){return crs_wms;}}];",
                    "                    }",
                    "",
                    "",
                    "                    Ext.Ajax.request({",
                    "                        url: \"./app/data/proxy.php?url=\"+Ext.urlAppend(wms_url,\"REQUEST=GetCapabilities\"), //r.data.url",
                    "                        timeout:5000,",
                    "                        async:false,",
                    "                        success:function(result,response)",
                    "                        {",
                    "                            console.log(result);",
                    "                        }});",
                    "                    ",
                    "                    ",
                    "                    var store = new Ext.data.Store({",
                    "                        url: \"./app/data/proxy.php?url=\"+Ext.urlAppend(wms_url,\"REQUEST=GetCapabilities\"), //r.data.url",
                    "                        autoLoad: true,",
                    "                        reader: new Ext.data.XmlReader({",
                    "                            record: 'Layer/Layer',",
                    "                            fields: ['Name','Title']",
                    "                        })",
                    "                    });",
                    "",
                    "",
                    "                    store.on('load', function(store, records, options) {",
                    "",
                    "                        console.log(records);",
                    "                        alert(\"en load\");",
                    "                        /*var tpl = new Ext.XTemplate(",
                    "                            '<tpl for=\".\">',",
                    "                            '<h1>{filename}</h1>',",
                    "                            '<h1>{show_name}</h1>',",
                    "                            '</tpl>'",
                    "                        );",
                    "",
                    "                        tpl.append(Ext.get(\"woos-desktop\"), store.getRange());*/",
                    "",
                    "                    });",
                    "",
                    "                    /*var wms_store_layers = new Ext.data.Store({",
                    "                        url: \"./app/data/proxy.php?url=\"+Ext.urlAppend(wms_url,\"REQUEST=GetCapabilities\"), //r.data.url",
                    "                        reader: new Ext.data.XmlReader({",
                    "                            record: 'Layer/Layer'}, xml_columns",
                    "                                                      )",
                    "                    });",
                    "",
                    "",
                    "                    wms_store_layers.on('load', function(){",
                    "                        Ext.MessageBox.alert('Total records', 'Total: ' + wms_store_layers.getCount());",
                    "                    });",
                    "",
                    "",
                    "                    wms_store_layers.load();*/",
                    "",
                    "",
                    "                    Ext.getCmp('wms_grid_layers').reconfigure(store,wms_store_layers_columns);",
                    "",
                    "",
                    "                }",
                    "",
                    "",
                    "            });",
                    "",
                    "",
                    "        }",
                    "        else",
                    "        {",
                    "            Ext.Msg.alert(\"Error\",\"La dirección WMS no es correcta!\");",
                    "",
                    "        }",
                    "        //Ext.getCmp('wms_grid_services').loadMask.hide();",
                    "    },",
                    "    failure:function()",
                    "    {",
                    "        Ext.Msg.alert(\"Error\", \"El servicio WMS no responde.\");",
                    "        //Ext.getCmp('wms_grid_services').loadMask.hide();",
                    "    }",
                    "});"
                ]
            },
            "name": "addWMSServer",
            "designerId": "86eda041-bf3a-4630-80f0-c9feb02e5086"
        }
    ]
}