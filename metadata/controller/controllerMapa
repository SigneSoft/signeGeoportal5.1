{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "controllerMapa",
        "views": [
            "LegendPanel",
            "VistaPrevia"
        ]
    },
    "name": "MyController",
    "designerId": "57b5bd24-aacb-4e2b-b591-bcf482d529b8",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnEnfocar",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnEnfocarClick",
                "implHandler": [
                    "signeGeoportal.xMap.map.zoomToScale(2000000,false);",
                    "",
                    "//signePortal.xMap.zoomToExtent(new OpenLayers.Bounds(minLng,minLat,maxLng,maxLat));"
                ],
                "name": "click"
            },
            "name": "onBtnEnfocarClick",
            "designerId": "f6bd9f62-343b-4527-8cf1-f2e3728865e0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnEliminarCapa",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnEliminarCapaClick",
                "implHandler": [
                    "var layer = signeGeoportal.getApplication().obtenerLayer();",
                    "",
                    "if (layer){",
                    "    Ext.MessageBox.show({",
                    "        title : 'Eliminar Capa',",
                    "        buttons : Ext.MessageBox.YESNO,",
                    "        msg : 'Realmente desea eliminar la capa ' + record.data.layer.name +  ' del mapa ?',",
                    "        icon : Ext.Msg.WARNING,",
                    "        fn : function(btn)",
                    "        {",
                    "            if (btn == 'yes')",
                    "            {",
                    "                signeGeoportal.xMap.map.removeLayer(layer);",
                    "            }",
                    "",
                    "        }",
                    "    });",
                    "}",
                    "",
                    "",
                    ""
                ],
                "name": "click"
            },
            "name": "onBtnEliminarCapaClick",
            "designerId": "c0698dc8-8eeb-4965-a752-0c1242a76e25"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnImprimir",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnImprimirClick",
                "implHandler": [
                    "signeGeoportal.getApplication().toggleControl(this);",
                    "",
                    "var printExtent = Ext.create('GeoExt.plugins.PrintExtent', {",
                    "    printProvider: printProvider",
                    "});",
                    "",
                    "printDialog = Ext.create('Ext.Window', {",
                    "    height: 580,",
                    "    width: 450,",
                    "    layout: 'border',",
                    "    title: 'Vista previa de impresión.',",
                    "    modal: true,",
                    "    items: [",
                    "        {",
                    "            xtype: 'panel',",
                    "            region: 'north',",
                    "            layout: 'fit',",
                    "            title: '',",
                    "            dockedItems: [",
                    "                {",
                    "                    xtype: 'toolbar',",
                    "                    dock: 'top',",
                    "                    items: [",
                    "                        {",
                    "                            xtype: 'button',",
                    "                            id: 'btnImprimirMapa',",
                    "                            text: 'Imprimir PDF',",
                    "                            iconCls: 'print-pdf',",
                    "                            handler: function(){",
                    "                                var legendlayer = Ext.getCmp('legendlayer');",
                    "                                var printMapPanel = Ext.getCmp('printmappanel');",
                    "",
                    "                                var includeLegend;",
                    "                                includeLegend = true;",
                    "",
                    "                                var scale = printProvider.scales.getAt(1);",
                    "                                printPage.setScale(scale, \"m\");",
                    "",
                    "",
                    "                                printProvider.customParams.mapTitle = Ext.getCmp('txtTitulo').getValue();",
                    "                                printProvider.customParams.comment = Ext.getCmp('txtComentario').getValue();",
                    "",
                    "                                var opt = {\"mode\":\"screen\"};",
                    "                                printPage.fit(printMapPanel, opt);",
                    "",
                    "                                printProvider.setDpi(printProvider.dpis.getAt(1));",
                    "                                printProvider.print(printMapPanel, printPage, includeLegend && {legend: legendlayer});",
                    "                            }",
                    "",
                    "                        }",
                    "                    ]",
                    "                }",
                    "            ],",
                    "            items: [",
                    "                {",
                    "                    xtype: 'fieldset',",
                    "                    height: 120,",
                    "                    title: 'Información del mapa',",
                    "                    items: [",
                    "                        {",
                    "                            xtype: 'textfield',",
                    "                            anchor: '100%',",
                    "                            id: 'txtTitulo',",
                    "                            fieldLabel: 'Titulo',",
                    "                            name: 'tituloMapa',",
                    "                            allowBlank: false",
                    "                        },",
                    "                        {",
                    "                            xtype: 'textareafield',",
                    "                            anchor: '100%',",
                    "                            id: 'txtComentario',",
                    "                            fieldLabel: 'Comentario',",
                    "                            name: 'comentarioMapa',",
                    "                            allowBlank: false",
                    "                        }",
                    "                    ]",
                    "                }",
                    "            ]",
                    "        },",
                    "        {",
                    "            xtype: 'panel',",
                    "            items: {",
                    "                xtype: \"gx_printmappanel\",",
                    "                id: 'printmappanel',",
                    "                sourceMap: signeGeoportal.xMap,",
                    "                printProvider: printProvider,",
                    "                //center: new OpenLayers.LonLat(-10048800, 1735400),",
                    "                //limitScales:true,",
                    "                //plugins: [printExtent],",
                    "            },",
                    "            region: 'center',",
                    "            layout: 'fit',",
                    "        }]",
                    "});",
                    "",
                    "",
                    "printDialog.show();",
                    "",
                    "//printExtent.addPage();",
                    ""
                ],
                "name": "click"
            },
            "name": "onBtnImprimirClick",
            "designerId": "e0c461fd-c825-4b3f-be06-62b84c273af4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnAniadirCapa",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnAniadirCapaClick",
                "implHandler": [
                    "var pgParametro = Ext.getCmp('pgParametro');",
                    "data = pgParametro.getSource();",
                    "store = pgParametro.getStore();",
                    "var strParametros = \"\";",
                    "var strTexto = \"\";",
                    "var strVariable = \"env=\";",
                    "",
                    "var error = false;",
                    "",
                    "// Validación para el parmámetro color",
                    "if(!store.data.items[0].data.value){",
                    "    error = true;",
                    "",
                    "}else{",
                    "    //                                    var codigo_color =['a','b','c','d','e','f','9','8','7','6','5','4','3','2','1','0'];",
                    "    //                                    var codigo_color =['a','b','c','d','e','f','0','1','2','3','4','5','6','7','8','9'];",
                    "    var value = store.data.items[0].data.value;",
                    "",
                    "    var codigo_color =['0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'];",
                    "",
                    "    //value = '123456';",
                    "",
                    "    var codigo = value.substring(2, 3);",
                    "",
                    "    var par1 = value.substring(0,2);",
                    "",
                    "    var par3 = value.substring(4,6);",
                    "",
                    "    var posicion = codigo_color.indexOf(codigo);",
                    "",
                    "    var intervalo = parseInt(16 / signeGeoportal.xClase) ;",
                    "",
                    "    //var intervalo_redondeado = parseFloat(intervalo).toFixed(0);",
                    "    //        cadenavariables=\"&env=r1:\"+r1+\";r2:\"+r2+\";r3:\"+r3+\";r4:\"+r4+\";r5:\"+limite+\";c1:33a02c;c2:b2df8a;c4:ff7f00;c5:e31a1c\";",
                    "    //&env=color:00FF00;name:triangle;size:12",
                    "    var strVariable = strVariable + \"color0:\"+value;",
                    "",
                    "    for(var n=1;n<signeGeoportal.xClase;n++)",
                    "    {",
                    "        posicion = parseInt(posicion) + intervalo;",
                    "        if (posicion > 16){",
                    "            posicion = 0;",
                    "",
                    "        }",
                    "        strVariable = strVariable + \";color\" + n + \":\" + par1 + codigo_color[posicion] + codigo_color[posicion] + par3;",
                    "",
                    "",
                    "    }",
                    "",
                    "   // console.log(strVariable);",
                    "",
                    "}",
                    "",
                    "",
                    "//Validación para el resto de parámetros",
                    "for(var i=1;i<store.data.items.length;i++)",
                    "{",
                    "",
                    "    if (i > 0 ){",
                    "",
                    "        // A la variable i se le debe restar la cantidad de variables de substitución de estilo",
                    "",
                    "        strParametros = strParametros + \"p\" + (i - 1) + \":\" + store.data.items[i].data.value + \";\";",
                    "        strTexto = strTexto + store.data.items[i].data.value + \" \";",
                    "",
                    "        if (!store.data.items[i].data.value){",
                    "",
                    "            error = true;",
                    "            //        console.log(store.data.items[i]);",
                    "        }",
                    "",
                    "    }",
                    "}",
                    "",
                    "if (error === true){",
                    "    Ext.Msg.show({",
                    "        title: 'Mensaje del Sistema',",
                    "        msg: 'No es posible añadir la capa debido que existen parámetros que no se han definido.',",
                    "        buttons: Ext.Msg.OK,",
                    "        icon: Ext.MessageBox.INFO",
                    "    });",
                    "}else{",
                    "    signeGeoportal.getApplication().aniadirCapa(signeGeoportal.xClone.title, signeGeoportal.xClone.url, signeGeoportal.xClone.name, signeGeoportal.xClone, strVariable, strParametros, strTexto);",
                    "}",
                    "",
                    ""
                ],
                "name": "click"
            },
            "name": "onBtnAniadirCapaClick",
            "designerId": "df4476bf-411f-43df-ae8d-e1b041afc4a8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnAyuda",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnAyudaClick",
                "implHandler": [
                    "url='manual_siceg_geoportal.pdf';",
                    "",
                    "var vp = Ext.widget('vistaprevia');",
                    "vp.down('#vistaPrevia').update('<iframe src=\"./docs/' + url + '\" width=\"100%\" height=\"100%\"></iframe>');",
                    "vp.show();"
                ],
                "name": "click"
            },
            "name": "onBtnAyudaClick",
            "designerId": "39dbf78a-513c-4cc4-b4d1-9200c9a7d80b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#myviewport",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.container.Viewport",
                "fn": "onMyviewportAfterRender",
                "implHandler": [
                    "// Carga el listado de capas disponibles en el servidor",
                    "",
                    "var store = Ext.create('GeoExt.data.WmsCapabilitiesLayerStore', {",
                    "    storeId: 'wmscapsStore',",
                    "    url: \"http://190.85.233.223:8080/geoserver/siceg/wms?service=wms&version=1.1.1&request=GetCapabilities\",",
                    "    //url: \"http://192.168.56.101:8282/geoserver/SIGE/wms?service=wms&version=1.1.1&request=GetCapabilities\",",
                    "    autoLoad: true",
                    "});",
                    "",
                    "",
                    "var grid = Ext.ComponentQuery.query('listalayer')[0];",
                    "",
                    "grid.reconfigure(store);",
                    "",
                    "// Define y crea el panel de leyenda",
                    "",
                    "signeGeoportal.xLayerStore = Ext.create('Ext.data.TreeStore', {",
                    "    model: 'GeoExt.data.LayerTreeModel',",
                    "    root: {",
                    "        plugins: [{",
                    "            ptype: \"gx_overlaylayercontainer\",",
                    "            //ptype: \"gx_layercontainer\",",
                    "            /*loader: {",
                    "                createNode: function(attr) {",
                    "                    // add a WMS legend to each node created",
                    "                    attr.component = {",
                    "                        xtype: \"gx_wmslegend\",",
                    "                        layerRecord: signeGeoportal.xMap.layers.getByLayer(attr.layer),",
                    "                        showTitle: false,",
                    "                        // custom class for css positioning",
                    "                        // see tree-legend.html",
                    "                        cls: \"legend\"",
                    "                    };",
                    "                    return GeoExt.tree.LayerLoader.prototype.createNode.call(this, attr);",
                    "                }",
                    "            }*/",
                    "        }]",
                    "    }",
                    "});",
                    "",
                    "//*** Este código añade al panel el arbol que contiene los layers",
                    "var treeLayer = Ext.create('GeoExt.tree.Panel', {",
                    "    region: \"center\",",
                    "    autoScroll: true,",
                    "    id: 'treelayer',",
                    "    viewConfig: {",
                    "        plugins: [{",
                    "            ptype: 'treeviewdragdrop',",
                    "            appendOnly: false",
                    "        }]",
                    "    },",
                    "    store: signeGeoportal.xLayerStore,",
                    "    rootVisible: false,",
                    "    lines: false,",
                    "    listeners: {",
                    "        itemclick : function(view,rec,item,index,eventObj) {",
                    "            layer = signeGeoportal.getApplication().obtenerLayer();",
                    "            var slider = Ext.getCmp('slider');",
                    "            slider.setValue(layer.opacity * 100);",
                    "",
                    "        }",
                    "    }",
                    "});",
                    "",
                    "var contentpanel = Ext.ComponentQuery.query('contentpanel')[0];",
                    "contentpanel.add(treeLayer);",
                    "",
                    "/*var slider= new GeoExt.LayerOpacitySlider({",
                    "\t\t\t\t\tid:\"opacity_slider\",",
                    "\t\t\t\t\taggressive:true,",
                    "\t\t\t\t\tvertical:false,",
                    "\t\t\t\t\twidth:100,",
                    "\t\t\t\t\tvalue:70,",
                    "\t\t\t\t\tminValue:0,",
                    "\t\t\t\t\tmaxValue:100,",
                    "\t\t\t\t\tplugins: new GeoExt.LayerOpacitySliderTip() ,",
                    "\t\t\t\t\tlisteners:{change:function(slider,newValue,thumb) {",
                    "\t\t\t\t\t\t\t\t\t\t\t  var record = getRecordTree();",
                    "\t\t\t\t\t\t\t\t\t\t\t  if(record.layer)",
                    "\t\t\t\t\t\t\t\t\t\t\t     record.layer.setOpacity(newValue/100.0);",
                    "\t\t\t\t\t\t\t\t\t\t\t  }",
                    "",
                    "\t\t\t\t\t\t  }",
                    "\t\t\t\t\t  });*/",
                    "",
                    "var slider = Ext.create('GeoExt.slider.LayerOpacity', {",
                    "    id:'slider',",
                    "    aggressive: true,",
                    "    width: '100%',",
                    "    inverse: true,",
                    "    fieldLabel: \"Transparencia\",",
                    "    value:80,",
                    "    plugins: Ext.create(\"GeoExt.slider.Tip\", {",
                    "        getText: function(thumb) {",
                    "            return Ext.String.format('Transparencia: {0}%', thumb.value);",
                    "        }",
                    "    }),",
                    "    listeners:{change:function(slider,newValue,thumb) {",
                    "        var layer = signeGeoportal.getApplication().obtenerLayer();",
                    "        //console.log(layer);",
                    "        if(layer)",
                    "            layer.setOpacity(newValue/100.0);",
                    "    }",
                    "              }",
                    "});",
                    "",
                    "",
                    "var legendtool = Ext.getCmp('tbSlider');",
                    "legendtool.add(slider);",
                    "//legendtool.doLayout();*/",
                    "",
                    "//*** Este código añade al panel el arbol que contiene la leyenda",
                    "var legendLayer = Ext.create('GeoExt.panel.Legend',{",
                    "    region: \"center\",",
                    "    autoScroll: true,",
                    "    id: 'legendlayer',",
                    "    padding: '5 10 5 10',",
                    "    layerStore: signeGeoportal.xMap.layers",
                    "});",
                    "",
                    "var legendpanel = Ext.ComponentQuery.query('legendpanel')[0];",
                    "",
                    "legendpanel.add(legendLayer);",
                    "",
                    "//console.log(signeGeoportal.xMap.map.layers);",
                    "",
                    "// Define y crea el panel de información",
                    "/*signeGeoportal.xInfo = new OpenLayers.Control.WMSGetFeatureInfo({",
                    "    //    autoActivate: true,",
                    "    //infoFormat: \"application/vnd.ogc.gml\",",
                    "    //url: \"http://192.168.56.101:8282/geoserver/SIGE/wms?SERVICE=WMS&\",",
                    "    maxFeatures: 3,",
                    "    //    layers: [signeGeoportal.xMap.map.layers['3']],",
                    "    eventListeners: {",
                    "",
                    "        beforegetfeatureinfo: function(event) {",
                    "",
                    "",
                    "            var retArray = [];",
                    "            var vParams = [];",
                    "            var layer;",
                    "",
                    "            for(var i=0;i<signeGeoportal.xMap.map.layers.length;i++)",
                    "            {",
                    "",
                    "",
                    "                layer = signeGeoportal.xMap.map.layers[i];",
                    "                if (layer.params){",
                    "                    if (layer.params.VIEWPARAMS){",
                    "                        vParams.push(layer.params.VIEWPARAMS);",
                    "                    }",
                    "                    else{",
                    "                        vParams.push('x:0'); // just to have something. Number of params must equal number of layers",
                    "                    }",
                    "                    retArray.push(layer);",
                    "                }",
                    "            }",
                    "",
                    "            // put view parameters into a string",
                    "            var viewparams = '';",
                    "            for (i=vParams.length-1; i>=0; i--){",
                    "                viewparams += vParams[i];",
                    "                viewparams += (i>0)? ',' : '';",
                    "            }",
                    "",
                    "            // add a buffer of 20 pixels around 'click' pluss the viewParams",
                    "            this.vendorParams = (vParams.length > 0)? {'buffer':5, 'viewParams': viewparams} : {buffer:5};",
                    "            // set the layers to be queried",
                    "            this.layers = retArray;",
                    "",
                    "        },",
                    "        \"getfeatureinfo\": function(e) {",
                    "",
                    "            //          console.log(e.request._object);",
                    "",
                    "            var items = [];",
                    "",
                    "            var infopanel = Ext.ComponentQuery.query('infopanel')[0];",
                    "",
                    "            infopanel.removeAll();",
                    "            //infopanel.remove('infogrid',false);",
                    "",
                    "            var propiedades = Ext.create('Ext.form.Panel', {",
                    "                //title: 'Simple Form',",
                    "                region: \"center\",",
                    "                autoScroll: true,",
                    "                padding: '5 10 5 10',",
                    "                html: e.text,",
                    "            });",
                    "",
                    "            items.push(propiedades);",
                    "",
                    "            infopanel.add(items);",
                    "",
                    "        }",
                    "",
                    "",
                    "",
                    "    }",
                    "});*/",
                    "",
                    "//signeGeoportal.xMap.map.addControl(signeGeoportal.xInfo);",
                    "",
                    "signeGeoportal.xMap.map.events.register('click', signeGeoportal.xMap.map, function (e) {",
                    "",
                    "    if(Ext.getCmp(\"btnInformacion\").pressed === true){",
                    "",
                    "        var retNameArray = [];",
                    "        var vParams = [];",
                    "        var layerUrl;",
                    "",
                    "        for(var i=0;i<signeGeoportal.xMap.map.layers.length;i++)",
                    "        {",
                    "",
                    "            layer = signeGeoportal.xMap.map.layers[i];",
                    "            if (layer.params){",
                    "",
                    "                if (layer.params.VIEWPARAMS){",
                    "",
                    "                    vParams.push(layer.params.VIEWPARAMS);",
                    "                }",
                    "                else{",
                    "                    vParams.push('x:0'); // just to have something. Number of params must equal number of layers",
                    "                }",
                    "                layerUrl = layer;",
                    "                retNameArray.push(layer.params.LAYERS);",
                    "            }",
                    "        }",
                    "",
                    "        if (layerUrl){",
                    "            var url =  layer.getFullRequestString({",
                    "                REQUEST: \"GetFeatureInfo\",",
                    "                EXCEPTIONS: \"application/vnd.ogc.se_xml\",",
                    "                FEATURE_COUNT:5,",
                    "                BBOX: signeGeoportal.xMap.map.getExtent().toBBOX(),",
                    "                X: e.xy.x,",
                    "                Y: e.xy.y,",
                    "                INFO_FORMAT: 'text/html',",
                    "                LAYERS:retNameArray,",
                    "                QUERY_LAYERS: retNameArray,//layer_group.params.LAYERS,",
                    "                WIDTH: signeGeoportal.xMap.map.size.w,",
                    "                HEIGHT: signeGeoportal.xMap.map.size.h,",
                    "                VIEWPARAMS:vParams",
                    "            });",
                    "",
                    "            window.open(url,",
                    "                        \"getfeatureinfo\",",
                    "                        \"location=0,status=0,scrollbars=1,width=600,height=400,modal=true\"",
                    "                       );",
                    "",
                    "        }",
                    "    }else if(Ext.getCmp(\"btnPosicion\").pressed === true){",
                    "        var position = this.events.getMousePosition(e);",
                    "        var lonlat = signeGeoportal.xMap.map.getLonLatFromPixel(position);",
                    "        var lonlatTransf = lonlat.transform(signeGeoportal.xMap.map.getProjectionObject(), new OpenLayers.Projection(\"EPSG:4326\"));",
                    "        mouseLat = lonlatTransf.lat;",
                    "        mouseLon = lonlatTransf.lon;",
                    "",
                    "        var str = '';",
                    "",
                    "        str +=  ', Longitud: ' + mouseLon + ' Latitud: ' + mouseLat + '&nbsp;&nbsp;&nbsp;';",
                    "",
                    "        var infopanel = Ext.ComponentQuery.query('infopanel')[0];",
                    "",
                    "        infopanel.removeAll();",
                    "",
                    "        infopanel.update(str);",
                    "    }",
                    "});",
                    "",
                    "/*signeGeoportal.xMeasure = new OpenLayers.Control.Measure(",
                    "    OpenLayers.Handler.Path,",
                    "    {",
                    "        immediate: true,",
                    "        persist: true",
                    "    }",
                    ");*/",
                    "",
                    "",
                    "",
                    "/*signeGeoportal.xMap.map.addControl(signeGeoportal.xMeasure);",
                    "",
                    "signeGeoportal.xMeasure.events.on({",
                    "    'measure': function(evt) {",
                    "        var infopanel = Ext.ComponentQuery.query('infopanel')[0];",
                    "",
                    "        infopanel.removeAll();",
                    "",
                    "        infopanel.update(signeGeoportal.xMeasure.getCustomLength(evt, true));",
                    "    },",
                    "    'measurepartial': function(evt) {",
                    "        var infopanel = Ext.ComponentQuery.query('infopanel')[0];",
                    "",
                    "        infopanel.removeAll();",
                    "",
                    "        infopanel.update(signeGeoportal.xMeasure.getCustomLength(evt, false));",
                    "",
                    "    }",
                    "});*/",
                    "",
                    "",
                    "signeGeoportal.xMeasure = {",
                    "    /* NOTE: Should be sure whether projection requires `{geodesic:true}`.",
                    "          See: http://dev.openlayers.org/docs/files/OpenLayers/Control/Measure-js.html#OpenLayers.Control.Measure.geodesic",
                    "          \"\"",
                    "            Geodesic calculation works the same in both the ScaleLine and Measure",
                    "            controls, so it has the same prerequisites. The advice that proj4js",
                    "            is needed to make it work is only true to the extent it is with any",
                    "            re-projection in OpenLayers: as long as your map is in EPSG:900913,",
                    "            you don't need proj4js. As soon as you use a different projection,",
                    "            you need it.",
                    "          \"\" (from comment by Andreas Hocevar)",
                    "          See: http://osgeo-org.1560.x6.nabble.com/Getting-the-right-results-from-Measure-tool-using-EPSG-3776-td3921884.html#a3921894",
                    "        */",
                    "    line: new OpenLayers.Control.DynamicMeasure(",
                    "        OpenLayers.Handler.Path, {geodesic:true}),",
                    "    polygon: new OpenLayers.Control.DynamicMeasure(",
                    "        OpenLayers.Handler.Polygon, {geodesic:true})",
                    "};",
                    "",
                    "signeGeoportal.xMap.map.addControls([",
                    "    signeGeoportal.xMeasure.line,",
                    "    signeGeoportal.xMeasure.polygon",
                    "]);",
                    "",
                    "/*signeGeoportal.xMeasure.line.getCustomLength = function(evt, onlySum) {",
                    "    var idx = evt.geometry.components.length;",
                    "",
                    "    if (idx < 2)",
                    "        return '';",
                    "",
                    "    var geom = new OpenLayers.Geometry.LineString([",
                    "        evt.geometry.components[idx - 2],",
                    "        evt.geometry.components[idx - 1]",
                    "    ]);",
                    "",
                    "    var lastLengthArr = this.getBestLength(geom);",
                    "",
                    "    var str = '';",
                    "",
                    "    if (idx > 2 || onlySum)",
                    "        str += 'Total: ' + (evt.units === 'km' ? evt.measure.toFixed(3) : evt.measure.toFixed(1)) + ' ' + evt.units + '&nbsp;&nbsp;&nbsp;';",
                    "",
                    "    if (!onlySum)",
                    "        str += 'Ultimo segmento: ' + (lastLengthArr[1] === 'km' ?  lastLengthArr[0].toFixed(3) : lastLengthArr[0].toFixed(1)) + ' ' + lastLengthArr[1];",
                    "",
                    "    return str;",
                    "};*/",
                    "",
                    "",
                    "",
                    "signeGeoportal.xMeasure.line.events.on({",
                    "    'measure': function(evt) {",
                    "        var infopanel = Ext.ComponentQuery.query('infopanel')[0];",
                    "",
                    "        infopanel.removeAll();",
                    "",
                    "        var str = '';",
                    "",
                    "        str += 'Total: ' + (evt.units === 'km' ? evt.measure.toFixed(3) : evt.measure.toFixed(1)) + ' ' + evt.units + '&nbsp;&nbsp;&nbsp;';",
                    "",
                    "        infopanel.update(str);",
                    "    },",
                    "    'measurepartial': function(evt) {",
                    "        var infopanel = Ext.ComponentQuery.query('infopanel')[0];",
                    "",
                    "        infopanel.removeAll();",
                    "",
                    "        var str = '';",
                    "",
                    "        str += 'Total: ' + (evt.units === 'km' ? evt.measure.toFixed(3) : evt.measure.toFixed(1)) + ' ' + evt.units + '&nbsp;&nbsp;&nbsp;';",
                    "",
                    "        infopanel.update(str);",
                    "",
                    "    }",
                    "});",
                    "",
                    "",
                    "signeGeoportal.xMeasure.polygon.events.on({",
                    "    'measure': function(evt) {",
                    "        ///console.log(evt);",
                    "        var infopanel = Ext.ComponentQuery.query('infopanel')[0];",
                    "",
                    "        infopanel.removeAll();",
                    "",
                    "        var str = '';",
                    "",
                    "        str += 'Total: ' + (evt.units === 'km cuadrado' ? evt.measure.toFixed(3) : evt.measure.toFixed(1)) + ' ' + evt.units + '&nbsp;&nbsp;&nbsp;';",
                    "",
                    "        infopanel.update(str);",
                    "",
                    "    },",
                    "    'measurepartial': function(evt) {",
                    "        var infopanel = Ext.ComponentQuery.query('infopanel')[0];",
                    "",
                    "        infopanel.removeAll();",
                    "",
                    "        var str = '';",
                    "",
                    "        str += 'Total: ' + (evt.units === 'km cuadrado' ? evt.measure.toFixed(3) : evt.measure.toFixed(1)) + ' ' + evt.units + '&nbsp;&nbsp;&nbsp;';",
                    "",
                    "        infopanel.update(str);",
                    "",
                    "    }",
                    "});",
                    ""
                ],
                "name": "afterrender"
            },
            "name": "onMyviewportAfterRender",
            "designerId": "692332ae-fe33-4543-a7da-e9e2fddf90ff"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnAniadir",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnAniadirClick",
                "implHandler": [
                    "var aniadirWMS = Ext.widget('ventanaaniadircapa');",
                    "                    aniadirWMS.show();"
                ],
                "name": "click"
            },
            "name": "onBtnAniadirClick",
            "designerId": "7c6fa8ca-e5d9-47d9-920e-f24fa7e67d9b"
        }
    ]
}